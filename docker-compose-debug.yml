version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass mypassword
    ports:
      - "6379:6379"

  fastapi_service_batch_processing:
    build:
      context: .  # Set the build context to the parent directory
      dockerfile: fastapi_service/Dockerfile  # Specify the Dockerfile location
    volumes:
      - ./myapp:/myapp  # Mount the myapp directory to /myapp in the container
    ports:
      - "8000:8000"  # Application port
      - "5678:5678"  # Debugger port for FastAPI service
    depends_on:
      - redis
    environment:
      - PYTHONUNBUFFERED=1  # Ensure Python output is flushed and displayed in real-time
    command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "uvicorn", "myapp.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  celery_worker:
    build:
      context: .
      dockerfile: celery_worker/Dockerfile
    volumes:
      - ./myapp:/myapp  # Mount the myapp directory to /myapp in the container
    depends_on:
      - redis
    environment:
      - PYTHONUNBUFFERED=1  # Ensure Python output is flushed and displayed in real-time
    ports:
      - "5679:5678"  # # Debugger port for Celery worker (host:container)
    command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "celery", "-A", "myapp.celery_app", "worker", "--loglevel=info", "--concurrency=1"]
